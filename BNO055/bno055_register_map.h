/*
 * bno055_register_map.h
 *
 *  Created on: Mar 15, 2023
 *      Author: nguye
 */

#ifndef APPLICATION_SENSOR_BNO055_BNO055_REGISTER_MAP_H_
#define APPLICATION_SENSOR_BNO055_BNO055_REGISTER_MAP_H_

#define BNO055_ID (0xA0)

enum bno055_register_page_0{
	CHIP_ID_PAGE_0 		= 0x00,
	ACC_ID 				= 0x01,
	MAG_ID 				= 0x02,
	GYR_ID 				= 0x03,
	SW_REV_ID_LSB 		= 0x04,
	SW_REV_ID_MSB 		= 0x05,
	BL_REV_ID 			= 0x06,
	PAGE_ID  			= 0x07,
	ACC_DATA_X_LSB		= 0x08,
	ACC_DATA_X_MSB		= 0x09,
	ACC_DATA_Y_LSB		= 0x0A,
	ACC_DATA_Y_MSB		= 0x0B,
	ACC_DATA_Z_LSB		= 0x0C,
	ACC_DATA_Z_MSB		= 0x0D,
	MAG_DATA_X_LSB		= 0x0E,
	MAG_DATA_X_MSB		= 0x0F,
	MAG_DATA_Y_LSB		= 0x10,
	MAG_DATA_Y_MSB		= 0x11,
	MAG_DATA_Z_LSB 		= 0x12,
	MAG_DATA_Z_MSB  	= 0x13,
	GYR_DATA_X_LSB 		= 0x14,
	GYR_DATA_X_MSB 		= 0x15,
	GYR_DATA_Y_LSB 		= 0x16,
	GYR_DATA_Y_MSB 		= 0x17,
	GYR_DATA_Z_LSB 		= 0x18,
	GYR_DATA_Z_MSB 		= 0x19,
	EUL_HEADING_LSB 	= 0x1A,
	EUL_HEADING_MSB 	= 0x1B,
	EUL_ROLL_LSB 		= 0x1C,
	EUL_ROLL_MSB 		= 0x1D,
	EUL_PITCH_LSB 		= 0x1E,
	EUL_PITCH_MSB 		= 0x1F,
	QUA_DATA_W_LSB		= 0x20,
	QUA_DATA_W_MSB		= 0x21,
	QUA_DATA_X_LSB 		= 0x22,
	QUA_DATA_X_MSB		= 0x23,
	QUA_DATA_Y_LSB		= 0x24,
	QUA_DATA_Y_MSB		= 0x25,
	QUA_DATA_Z_LSB		= 0x26,
	QUA_DATA_Z_MSB		= 0x27,
	LIA_DATA_X_LSB		= 0x28,
	LIA_DATA_X_MSB		= 0x29,
	LIA_DATA_Y_LSB		= 0x2A,
	LIA_DATA_Y_MSB		= 0x2B,
	LIA_DATA_Z_LSB		= 0x2C,
	LIA_DATA_Z_MSB		= 0x2D,
	GRV_DATA_X_LSB		= 0x2E,
	GRV_DATA_X_MSB		= 0x2F,
	GRV_DATA_Y_LSB		= 0x30,
	GRV_DATA_Y_MSB		= 0x31,
	GRV_DATA_Z_LSB		= 0x32,
	GRV_DATA_Z_MSB		= 0x33,
	TEMP				= 0x34,
	CALIB_STAT			= 0x35,
	ST_RESULT			= 0x36,
	INT_STA				= 0x37,
	SYS_CLK_STATUS		= 0x38,
	SYS_STATUS			= 0x39,
	SYS_ERR				= 0x3A,
	UNIT_SEL			= 0x3B,
	//RESERVED			= 0x3C,
	OPR_MODE			= 0x3D,
	PWR_MODE			= 0x3E,
	SYS_TRIGGER			= 0x3F,
	TEMP_SOURCE			= 0x40,
	AXIS_MAP_CONFIG		= 0x41,
	AXIS_MAP_SIGN		= 0x42,
	//RESERVED			= 0x43-54,
	ACC_OFFSET_X_lSB 	= 0x55,
	ACC_OFFSET_X_MSB	= 0x56,
	ACC_OFFSET_Y_lSB 	= 0x57,
	ACC_OFFSET_Y_MSB	= 0x58,
	ACC_OFFSET_Z_lSB 	= 0x59,
	ACC_OFFSET_Z_MSB	= 0x5A,
	MAG_OFFSET_X_lSB 	= 0x5B,
	MAG_OFFSET_X_MSB	= 0x5C,
	MAG_OFFSET_Y_lSB 	= 0x5D,
	MAG_OFFSET_Y_MSB	= 0x5E,
	MAG_OFFSET_Z_lSB 	= 0x5F,
	MAG_OFFSET_Z_MSB	= 0x60,
	GYR_OFFSET_X_lSB 	= 0x61,
	GYR_OFFSET_X_MSB	= 0x62,
	GYR_OFFSET_Y_lSB 	= 0x63,
	GYR_OFFSET_Y_MSB	= 0x64,
	GYR_OFFSET_Z_lSB 	= 0x65,
	GYR_OFFSET_Z_MSB	= 0x66,
	ACC_RADIUS_LSB		= 0x67,
	ACC_RADIUS_MSB		= 0x68,
	MAG_RADIUS_LSB		= 0x69,
	MAG_RADIUS_MSB		= 0x6A,
	//RESERVED			= 0x6B-7F,
};

enum bno055_register_page_1{
	CHIP_ID_PAGE_1 		= 0x07,
	ACC_CONFIG 			= 0x08,
	MAG_CONFIG 			= 0x09,
	GYR_CONFIG_0 		= 0x0A,
	GYR_CONFIG_1 		= 0x0B,
	ACC_SLEEP_CONFIG	= 0x0C,
	GYR_SLEEP_CONFIG	= 0x0D,
	INT_MSK				= 0x0F,
	INT_EN				= 0x10,
	ACC_AM_THRES		= 0x11,
	ACC_INT_SETTINGS	= 0x12,
	ACC_HG_DURATION		= 0x13,
	ACC_HG_THRES		= 0x14,
	ACC_NM_THRE			= 0x15,
	ACC_NM_SET			= 0x16,
	GYR_INT_SETTING		= 0x17,
	GYR_HR_X_SET		= 0x18,
	GYR_DUR_X			= 0x19,
	GYR_HR_Y_SET		= 0x1A,
	GYR_DUR_Y			= 0x1B,
	GYR_HR_Z_SET		= 0x1C,
	GYR_DUR_Z			= 0x1D,
	GYR_AM_THRES		= 0x1E,
	GYR_AM_SET			= 0x1F,
};

enum{
	/*sys_trigger*/
	DEFAULT_SYSTEM  = 0x00,
	CLK_SEL = 0x80,
	RST_INT = 0x40,
	RESET_SYSTEM = 0x20,
	Self_Test = 0x01,
	/*Acceleration Configuration*/
	//G Range
	ACC_2G_RANGE = 0b00,
	ACC_4G_RANGE =	0b01,
	ACC_8G_RANGE =	0b10,
	ACC_16G_RANGE =0b11,
	//Bandwidth
	ACC_BANDWIDTH_7_81HZ = (0b000 << 2),
	ACC_BANDWIDTH_15_63HZ = (0b001 << 2),
	ACC_BANDWIDTH_31_25HZ = (0b010 << 2),
	ACC_BANDWIDTH_62_5HZ = (0b011 << 2),
	ACC_BANDWIDTH_125HZ = (0b100 << 2),
	ACC_BANDWIDTH_250HZ = (0b101 << 2),
	ACC_BANDWIDTH_500HZ = (0b110 << 2),
	ACC_BANDWIDTH_1000HZ = (0b111 << 2),
	//OPRMode
	ACC_OPERATION_MODE_NORMAL = (0b000 << 5),
	ACC_OPERATION_MODE_SUSPEND = (0b001 << 5),
	ACC_OPERATION_MODE_LOW_POWER_1 = (0b010 << 5),
	ACC_OPERATION_MODE_STANDBY = (0b011 << 5),
	ACC_OPERATION_MODE_LOW_POWER_2 = (0b100 << 5),
	ACC_OPERATION_MODE_DEEP_SUSPEND = (0b101 << 5),

	/*Gyroscope Configuration*/
	//G Range
	GYR_2000DPS_RANGE = 0b000,
	GYR_1000DPS_RANGE =	0b001,
	GYR_500DPS_RANGE =	0b010,
	GYR_250DPS_RANGE =0b011,
	GYR_125DPS_RANGE =0b100,
	//Bandwidth
	GYR_BANDWIDTH_523HZ = (0b000 << 3),
	GYR_BANDWIDTH_230HZ = (0b001 << 3),
	GYR_BANDWIDTH_116HZ = (0b010 << 3),
	GYR_BANDWIDTH_47HZ = (0b011 << 3),
	GYR_BANDWIDTH_23HZ = (0b100 << 3),
	GYR_BANDWIDTH_12HZ = (0b101 << 3),
	GYR_BANDWIDTH_64HZ = (0b110 << 3),
	GYR_BANDWIDTH_32HZ = (0b111 << 3),

	//OPRMode
	GYR_OPERATION_MODE_NORMAL = 0b000,
	GYR_OPERATION_MODE_FAST_POWER_UP = 0b001,
	GYR_OPERATION_MODE_DEEP_SUSPEND =0b010,
	GYR_OPERATION_MODE_SUSPEND = 0b011,
	GYR_OPERATION_MODE_ADVANCED_POWER_SAVE = 0b100,

	/*Magnetometer Configuration*/
	//Data Output Rate
	MAG_2HZ_RANGE = 0b000,
	MAG_6HZ_RANGE =	0b001,
	MAG_8HZ_RANGE =	0b010,
	MAG_10HZ_RANGE =0b011,
	MAG_15HZ_RANGE =0b100,
	MAG_20HZ_RANGE =	0b101,
	MAG_25HZ_RANGE =0b110,
	MAG_30HZ_RANGE =0b111,
	//OPR Mode
	MAG_OPERATION_MODE_LOW_POWER = (0b00 << 3),
	MAG_OPERATION_MODE_REGULAR = (0b01 << 3),
	MAG_OPERATION_MODE_ENHANCED_REGULAR = (0b10 << 3),
	MAG_OPERATION_MODE_HIGH_ACCURACY  = (0b11 << 3),
	//PWR Mode
	MAG_PWR_MODE_NORMAL = (0b00 << 5),
	MAG_PWR_MODE_SLEEP = (0b01 << 5),
	MAG_PWR_MODE_SUSPEND = (0b10 << 5),
	MAG_PWR_MODE_FORCE_MODE  = (0b11 << 5),

	/*Configuration Sensor Unit*/
	ACC_LIA_GRVVector_MS2		= 0b0,
	ACC_LIA_GRVVector_MG		= 0b1,

	ANGULAR_RATE_GYR_DPS			    =  (0b0<< 1),
	ANGULAR_RATE_GYR_RPS			    =  (0b1<< 1),

	EULER_ANGLES_DEGREES		= (0b0<< 2),
	EULER_ANGLES_RADIANS	= (0b1<< 2),

	TEMP_C		= (0b0<< 4),
	TEMP_F	= (0b1<< 4),

	FUSION_DATA_OUTPUT_FORMAT_WINDOWS  = (0b0<< 7),
	FUSION_DATA_OUTPUT_FORMAT_ANDROID  = (0b1<< 7),
};

typedef enum{
	//Config Mode
	BNO055_OPERATION_CONFIG_MODE   		= 0b0000,
	// Non Fusion Mode
	BNO055_OPERATION_MODE_ACCONLY  		= 0b0001,
	BNO055_OPERATION_MODE_MAGONLY  		= 0b0010,
	BNO055_OPERATION_MODE_GYROONLY 		= 0b0011,
	BNO055_OPERATION_MODE_ACCMAG		= 0b0100,
	BNO055_OPERATION_MODE_ACCGYRO		= 0b0101,
	BNO055_OPERATION_MODE_MAGGYRO		= 0b0110,
	BNO055_OPERATION_MODE_AMG			= 0b0111,
	//Fusion Mode
	BNO055_OPERATION_MODE_IMU 			= 0b1000,
	BNO055_OPERATION_MODE_COMPASS 		= 0b1001,
	BNO055_OPERATION_MODE_M4G 			= 0b1010,
	BNO055_OPERATION_MODE_NDOF_FMC_OFF 	= 0b1011,
	BNO055_OPERATION_MODE_NDOF 			= 0b1100,
}bno055_opr_mode_t;

typedef enum{
	WINDOWS_FUSION_DATA_OUTPUT 			= 0b0<<7,
	ANDROID_FUSION_DATA_OUTPUT 			= 0b1<<7,
}fusion_data_output_systems_t;

typedef enum{
	REMAP_CONFIG_P0_3_5_6 = 0x21,
	REMAP_CONFIG_P1_2_4_7 = 0x24, // default
}bno055_axis_remap_config_t;

typedef enum{
    REMAP_SIGN_P0 = 0x04,
    REMAP_SIGN_P1 = 0x00, // default
    REMAP_SIGN_P2 = 0x06,
    REMAP_SIGN_P3 = 0x02,
    REMAP_SIGN_P4 = 0x03,
    REMAP_SIGN_P5 = 0x01,
    REMAP_SIGN_P6 = 0x07,
    REMAP_SIGN_P7 = 0x05,
}bno055_axis_remap_sign_t;

typedef enum{
	NORMAL_MODE 	= 0x00,
	LOW_POWER_MODE	= 0x01,
	SUSPEND_MODE    = 0x02,
}power_mode_t;

typedef enum{
	TEMP_SRC_ACCELEROMETER = 0x00,
	TEMP_SRC_GYROSCOPE = 0x01,
}temp_source_t;

#endif /* APPLICATION_SENSOR_BNO055_BNO055_REGISTER_MAP_H_ */
